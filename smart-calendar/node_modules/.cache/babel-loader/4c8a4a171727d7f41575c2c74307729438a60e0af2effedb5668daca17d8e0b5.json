{"ast":null,"code":"var _jsxFileName = \"/Users/alvinhartono/Documents/GitHub/ZackFairSldrFrst.github.io/smart-calendar/src/components/AIAssistant.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Send, Bot, Clock, Calendar } from 'lucide-react';\nimport { format, addDays } from 'date-fns';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AIAssistant = ({\n  availability,\n  bookings,\n  onTimeSlotClick\n}) => {\n  _s();\n  const [messages, setMessages] = useState([{\n    id: 1,\n    type: 'ai',\n    content: \"Hi! I'm your AI assistant powered by DeepSeek. I can help you find the best times for appointments based on your availability. Try asking me something like 'When are you free this week?' or 'I need a meeting next Monday afternoon'.\"\n  }]);\n  const [inputMessage, setInputMessage] = useState('');\n  const [isProcessing, setIsProcessing] = useState(false);\n\n  // Generate available time slots for analysis\n  const generateAvailableSlots = () => {\n    const slots = [];\n    const today = new Date();\n\n    // Generate slots for the next 2 weeks\n    for (let i = 0; i < 14; i++) {\n      const checkDate = addDays(today, i);\n      const dayName = format(checkDate, 'EEEE').toLowerCase();\n      const dayAvailability = availability[dayName];\n      if (dayAvailability && dayAvailability.available) {\n        const daySlots = generateTimeSlotsForDay(checkDate, dayAvailability, bookings);\n        if (daySlots.length > 0) {\n          slots.push({\n            date: format(checkDate, 'yyyy-MM-dd'),\n            dayName: format(checkDate, 'EEEE'),\n            dateFormatted: format(checkDate, 'MMM d'),\n            slots: daySlots\n          });\n        }\n      }\n    }\n    return slots;\n  };\n  const generateTimeSlotsForDay = (date, dayAvailability, existingBookings) => {\n    const slots = [];\n    const startTime = new Date(date);\n    const [startHour, startMinute] = dayAvailability.start.split(':');\n    startTime.setHours(parseInt(startHour), parseInt(startMinute), 0);\n    const endTime = new Date(date);\n    const [endHour, endMinute] = dayAvailability.end.split(':');\n    endTime.setHours(parseInt(endHour), parseInt(endMinute), 0);\n\n    // Generate 30-minute slots\n    const currentTime = new Date(startTime);\n    while (currentTime < endTime) {\n      const timeString = format(currentTime, 'HH:mm');\n      const isBooked = existingBookings.some(booking => format(new Date(booking.date), 'yyyy-MM-dd') === format(date, 'yyyy-MM-dd') && booking.time === timeString);\n      if (!isBooked) {\n        slots.push(timeString);\n      }\n      currentTime.setMinutes(currentTime.getMinutes() + 30);\n    }\n    return slots;\n  };\n\n  // Call DeepSeek API\n  const callDeepSeekAPI = async (userInput, availableSlots) => {\n    const apiKey = process.env.REACT_APP_DEEPSEEK_API_KEY || 'sk-ed4048785a4e4161a2a7e82780462032';\n    const apiUrl = 'https://api.deepseek.com/v1/chat/completions';\n    const systemPrompt = `You are an AI assistant helping users find appointment times. You have access to the following available time slots:\n\n${availableSlots.map(day => `${day.dayName}, ${day.dateFormatted}: ${day.slots.join(', ')}`).join('\\n')}\n\nYour role is to:\n1. Analyze the user's request and understand their preferences\n2. Suggest relevant time slots from the available options\n3. Format your response with clickable time slots using this format: [TIME_SLOT:date:time]\n4. Be conversational and helpful\n5. If no suitable times are found, explain why and suggest alternatives\n\nExample response format:\n\"I found some great times for you! Here are my recommendations:\n- [Monday, Dec 16:09:00:2024-12-16:09:00] - Early morning slot\n- [Monday, Dec 16:14:00:2024-12-16:14:00] - Afternoon slot\n\nClick on any time slot to book your appointment!\"\n\nOnly suggest times that are actually available in the provided slots.`;\n    try {\n      const response = await fetch(apiUrl, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${apiKey}`\n        },\n        body: JSON.stringify({\n          model: 'deepseek-chat',\n          messages: [{\n            role: 'system',\n            content: systemPrompt\n          }, {\n            role: 'user',\n            content: userInput\n          }],\n          temperature: 0.7,\n          max_tokens: 500\n        })\n      });\n      if (!response.ok) {\n        throw new Error(`API call failed: ${response.status}`);\n      }\n      const data = await response.json();\n      return data.choices[0].message.content;\n    } catch (error) {\n      console.error('DeepSeek API error:', error);\n      return \"I'm having trouble connecting to my AI service right now. Please try again later or use the booking interface directly.\";\n    }\n  };\n  const handleSendMessage = async () => {\n    if (!inputMessage.trim() || isProcessing) return;\n    const userMessage = {\n      id: messages.length + 1,\n      type: 'user',\n      content: inputMessage\n    };\n    setMessages(prev => [...prev, userMessage]);\n    setInputMessage('');\n    setIsProcessing(true);\n    try {\n      const availableSlots = generateAvailableSlots();\n      const aiResponse = await callDeepSeekAPI(inputMessage, availableSlots);\n      const aiMessage = {\n        id: messages.length + 2,\n        type: 'ai',\n        content: aiResponse\n      };\n      setMessages(prev => [...prev, aiMessage]);\n    } catch (error) {\n      const errorMessage = {\n        id: messages.length + 2,\n        type: 'ai',\n        content: \"I'm sorry, I encountered an error. Please try again or use the booking interface directly.\"\n      };\n      setMessages(prev => [...prev, errorMessage]);\n    } finally {\n      setIsProcessing(false);\n    }\n  };\n  const handleKeyPress = e => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSendMessage();\n    }\n  };\n\n  // Parse and render message content with clickable time slots\n  const renderMessageContent = content => {\n    // Regular expression to match time slot format: [TIME_SLOT:date:time]\n    const timeSlotRegex = /\\[([^:]+):([^:]+):([^\\]]+)\\]/g;\n    const parts = [];\n    let lastIndex = 0;\n    let match;\n    while ((match = timeSlotRegex.exec(content)) !== null) {\n      // Add text before the match\n      if (match.index > lastIndex) {\n        parts.push({\n          type: 'text',\n          content: content.slice(lastIndex, match.index)\n        });\n      }\n\n      // Add the clickable time slot\n      parts.push({\n        type: 'timeSlot',\n        displayText: match[1],\n        date: match[2],\n        time: match[3],\n        fullMatch: match[0]\n      });\n      lastIndex = match.index + match[0].length;\n    }\n\n    // Add remaining text\n    if (lastIndex < content.length) {\n      parts.push({\n        type: 'text',\n        content: content.slice(lastIndex)\n      });\n    }\n    return parts.map((part, index) => {\n      if (part.type === 'timeSlot') {\n        return /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => onTimeSlotClick && onTimeSlotClick(part.date, part.time),\n          className: \"inline-block bg-primary-600 text-white px-2 py-1 rounded text-sm hover:bg-primary-700 transition-colors mx-1\",\n          children: part.displayText\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 11\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"span\", {\n          children: part.content\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 16\n        }, this);\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-white rounded-lg shadow\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"border-b border-gray-200 p-4\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center justify-center w-10 h-10 bg-primary-100 rounded-full mr-3\",\n          children: /*#__PURE__*/_jsxDEV(Bot, {\n            className: \"h-5 w-5 text-primary-600\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-lg font-semibold text-gray-900\",\n            children: \"AI Assistant (DeepSeek)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-sm text-gray-500\",\n            children: \"Ask me about available times\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"h-96 overflow-y-auto p-4 space-y-4\",\n      children: [messages.map(message => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `flex ${message.type === 'user' ? 'justify-end' : 'justify-start'}`,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `max-w-xs lg:max-w-md px-4 py-2 rounded-lg ${message.type === 'user' ? 'bg-primary-600 text-white' : 'bg-gray-100 text-gray-900'}`,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"whitespace-pre-line\",\n            children: message.type === 'ai' ? renderMessageContent(message.content) : message.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 13\n        }, this)\n      }, message.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 11\n      }, this)), isProcessing && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-start\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-gray-100 text-gray-900 px-4 py-2 rounded-lg\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"animate-spin rounded-full h-4 w-4 border-b-2 border-primary-600 mr-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 17\n            }, this), \"Thinking...\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"border-t border-gray-200 p-4\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex space-x-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-1\",\n          children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: inputMessage,\n            onChange: e => setInputMessage(e.target.value),\n            onKeyPress: handleKeyPress,\n            placeholder: \"Ask me about available times... (e.g., 'When are you free this week?', 'I need a meeting next Monday afternoon')\",\n            className: \"w-full border border-gray-300 rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-primary-500 resize-none\",\n            rows: 2,\n            disabled: isProcessing\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSendMessage,\n          disabled: !inputMessage.trim() || isProcessing,\n          className: \"bg-primary-600 text-white px-4 py-2 rounded-lg hover:bg-primary-700 disabled:opacity-50 disabled:cursor-not-allowed flex items-center\",\n          children: /*#__PURE__*/_jsxDEV(Send, {\n            className: \"h-4 w-4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"border-t border-gray-200 p-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-sm font-medium text-gray-700 mb-2\",\n        children: \"Quick suggestions:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-wrap gap-2\",\n        children: [\"When are you free this week?\", \"I need a meeting next Monday\", \"Any afternoon slots available?\", \"What's your availability next week?\"].map((suggestion, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setInputMessage(suggestion),\n          className: \"text-xs bg-gray-100 hover:bg-gray-200 text-gray-700 px-3 py-1 rounded-full transition-colors\",\n          children: suggestion\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 228,\n    columnNumber: 5\n  }, this);\n};\n_s(AIAssistant, \"Y9phKg6y6turozShBApP4ma6cBQ=\");\n_c = AIAssistant;\nexport default AIAssistant;\nvar _c;\n$RefreshReg$(_c, \"AIAssistant\");","map":{"version":3,"names":["React","useState","Send","Bot","Clock","Calendar","format","addDays","jsxDEV","_jsxDEV","AIAssistant","availability","bookings","onTimeSlotClick","_s","messages","setMessages","id","type","content","inputMessage","setInputMessage","isProcessing","setIsProcessing","generateAvailableSlots","slots","today","Date","i","checkDate","dayName","toLowerCase","dayAvailability","available","daySlots","generateTimeSlotsForDay","length","push","date","dateFormatted","existingBookings","startTime","startHour","startMinute","start","split","setHours","parseInt","endTime","endHour","endMinute","end","currentTime","timeString","isBooked","some","booking","time","setMinutes","getMinutes","callDeepSeekAPI","userInput","availableSlots","apiKey","process","env","REACT_APP_DEEPSEEK_API_KEY","apiUrl","systemPrompt","map","day","join","response","fetch","method","headers","body","JSON","stringify","model","role","temperature","max_tokens","ok","Error","status","data","json","choices","message","error","console","handleSendMessage","trim","userMessage","prev","aiResponse","aiMessage","errorMessage","handleKeyPress","e","key","shiftKey","preventDefault","renderMessageContent","timeSlotRegex","parts","lastIndex","match","exec","index","slice","displayText","fullMatch","part","onClick","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","target","onKeyPress","placeholder","rows","disabled","suggestion","_c","$RefreshReg$"],"sources":["/Users/alvinhartono/Documents/GitHub/ZackFairSldrFrst.github.io/smart-calendar/src/components/AIAssistant.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Send, Bot, Clock, Calendar } from 'lucide-react';\nimport { format, addDays } from 'date-fns';\n\nconst AIAssistant = ({ availability, bookings, onTimeSlotClick }) => {\n  const [messages, setMessages] = useState([\n    {\n      id: 1,\n      type: 'ai',\n      content: \"Hi! I'm your AI assistant powered by DeepSeek. I can help you find the best times for appointments based on your availability. Try asking me something like 'When are you free this week?' or 'I need a meeting next Monday afternoon'.\"\n    }\n  ]);\n  const [inputMessage, setInputMessage] = useState('');\n  const [isProcessing, setIsProcessing] = useState(false);\n\n  // Generate available time slots for analysis\n  const generateAvailableSlots = () => {\n    const slots = [];\n    const today = new Date();\n    \n    // Generate slots for the next 2 weeks\n    for (let i = 0; i < 14; i++) {\n      const checkDate = addDays(today, i);\n      const dayName = format(checkDate, 'EEEE').toLowerCase();\n      const dayAvailability = availability[dayName];\n      \n      if (dayAvailability && dayAvailability.available) {\n        const daySlots = generateTimeSlotsForDay(checkDate, dayAvailability, bookings);\n        if (daySlots.length > 0) {\n          slots.push({\n            date: format(checkDate, 'yyyy-MM-dd'),\n            dayName: format(checkDate, 'EEEE'),\n            dateFormatted: format(checkDate, 'MMM d'),\n            slots: daySlots\n          });\n        }\n      }\n    }\n    \n    return slots;\n  };\n\n  const generateTimeSlotsForDay = (date, dayAvailability, existingBookings) => {\n    const slots = [];\n    const startTime = new Date(date);\n    const [startHour, startMinute] = dayAvailability.start.split(':');\n    startTime.setHours(parseInt(startHour), parseInt(startMinute), 0);\n\n    const endTime = new Date(date);\n    const [endHour, endMinute] = dayAvailability.end.split(':');\n    endTime.setHours(parseInt(endHour), parseInt(endMinute), 0);\n\n    // Generate 30-minute slots\n    const currentTime = new Date(startTime);\n    while (currentTime < endTime) {\n      const timeString = format(currentTime, 'HH:mm');\n      const isBooked = existingBookings.some(booking => \n        format(new Date(booking.date), 'yyyy-MM-dd') === format(date, 'yyyy-MM-dd') &&\n        booking.time === timeString\n      );\n      \n      if (!isBooked) {\n        slots.push(timeString);\n      }\n      \n      currentTime.setMinutes(currentTime.getMinutes() + 30);\n    }\n\n    return slots;\n  };\n\n  // Call DeepSeek API\n  const callDeepSeekAPI = async (userInput, availableSlots) => {\n    const apiKey = process.env.REACT_APP_DEEPSEEK_API_KEY || 'sk-ed4048785a4e4161a2a7e82780462032';\n    const apiUrl = 'https://api.deepseek.com/v1/chat/completions';\n    \n    const systemPrompt = `You are an AI assistant helping users find appointment times. You have access to the following available time slots:\n\n${availableSlots.map(day => \n  `${day.dayName}, ${day.dateFormatted}: ${day.slots.join(', ')}`\n).join('\\n')}\n\nYour role is to:\n1. Analyze the user's request and understand their preferences\n2. Suggest relevant time slots from the available options\n3. Format your response with clickable time slots using this format: [TIME_SLOT:date:time]\n4. Be conversational and helpful\n5. If no suitable times are found, explain why and suggest alternatives\n\nExample response format:\n\"I found some great times for you! Here are my recommendations:\n- [Monday, Dec 16:09:00:2024-12-16:09:00] - Early morning slot\n- [Monday, Dec 16:14:00:2024-12-16:14:00] - Afternoon slot\n\nClick on any time slot to book your appointment!\"\n\nOnly suggest times that are actually available in the provided slots.`;\n\n    try {\n      const response = await fetch(apiUrl, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${apiKey}`\n        },\n        body: JSON.stringify({\n          model: 'deepseek-chat',\n          messages: [\n            { role: 'system', content: systemPrompt },\n            { role: 'user', content: userInput }\n          ],\n          temperature: 0.7,\n          max_tokens: 500\n        })\n      });\n\n      if (!response.ok) {\n        throw new Error(`API call failed: ${response.status}`);\n      }\n\n      const data = await response.json();\n      return data.choices[0].message.content;\n    } catch (error) {\n      console.error('DeepSeek API error:', error);\n      return \"I'm having trouble connecting to my AI service right now. Please try again later or use the booking interface directly.\";\n    }\n  };\n\n  const handleSendMessage = async () => {\n    if (!inputMessage.trim() || isProcessing) return;\n\n    const userMessage = {\n      id: messages.length + 1,\n      type: 'user',\n      content: inputMessage\n    };\n\n    setMessages(prev => [...prev, userMessage]);\n    setInputMessage('');\n    setIsProcessing(true);\n\n    try {\n      const availableSlots = generateAvailableSlots();\n      const aiResponse = await callDeepSeekAPI(inputMessage, availableSlots);\n      \n      const aiMessage = {\n        id: messages.length + 2,\n        type: 'ai',\n        content: aiResponse\n      };\n\n      setMessages(prev => [...prev, aiMessage]);\n    } catch (error) {\n      const errorMessage = {\n        id: messages.length + 2,\n        type: 'ai',\n        content: \"I'm sorry, I encountered an error. Please try again or use the booking interface directly.\"\n      };\n      setMessages(prev => [...prev, errorMessage]);\n    } finally {\n      setIsProcessing(false);\n    }\n  };\n\n  const handleKeyPress = (e) => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSendMessage();\n    }\n  };\n\n  // Parse and render message content with clickable time slots\n  const renderMessageContent = (content) => {\n    // Regular expression to match time slot format: [TIME_SLOT:date:time]\n    const timeSlotRegex = /\\[([^:]+):([^:]+):([^\\]]+)\\]/g;\n    \n    const parts = [];\n    let lastIndex = 0;\n    let match;\n    \n    while ((match = timeSlotRegex.exec(content)) !== null) {\n      // Add text before the match\n      if (match.index > lastIndex) {\n        parts.push({\n          type: 'text',\n          content: content.slice(lastIndex, match.index)\n        });\n      }\n      \n      // Add the clickable time slot\n      parts.push({\n        type: 'timeSlot',\n        displayText: match[1],\n        date: match[2],\n        time: match[3],\n        fullMatch: match[0]\n      });\n      \n      lastIndex = match.index + match[0].length;\n    }\n    \n    // Add remaining text\n    if (lastIndex < content.length) {\n      parts.push({\n        type: 'text',\n        content: content.slice(lastIndex)\n      });\n    }\n    \n    return parts.map((part, index) => {\n      if (part.type === 'timeSlot') {\n        return (\n          <button\n            key={index}\n            onClick={() => onTimeSlotClick && onTimeSlotClick(part.date, part.time)}\n            className=\"inline-block bg-primary-600 text-white px-2 py-1 rounded text-sm hover:bg-primary-700 transition-colors mx-1\"\n          >\n            {part.displayText}\n          </button>\n        );\n      } else {\n        return <span key={index}>{part.content}</span>;\n      }\n    });\n  };\n\n  return (\n    <div className=\"bg-white rounded-lg shadow\">\n      {/* Header */}\n      <div className=\"border-b border-gray-200 p-4\">\n        <div className=\"flex items-center\">\n          <div className=\"flex items-center justify-center w-10 h-10 bg-primary-100 rounded-full mr-3\">\n            <Bot className=\"h-5 w-5 text-primary-600\" />\n          </div>\n          <div>\n            <h2 className=\"text-lg font-semibold text-gray-900\">AI Assistant (DeepSeek)</h2>\n            <p className=\"text-sm text-gray-500\">Ask me about available times</p>\n          </div>\n        </div>\n      </div>\n\n      {/* Messages */}\n      <div className=\"h-96 overflow-y-auto p-4 space-y-4\">\n        {messages.map((message) => (\n          <div\n            key={message.id}\n            className={`flex ${message.type === 'user' ? 'justify-end' : 'justify-start'}`}\n          >\n            <div\n              className={`max-w-xs lg:max-w-md px-4 py-2 rounded-lg ${\n                message.type === 'user'\n                  ? 'bg-primary-600 text-white'\n                  : 'bg-gray-100 text-gray-900'\n              }`}\n            >\n              <div className=\"whitespace-pre-line\">\n                {message.type === 'ai' ? renderMessageContent(message.content) : message.content}\n              </div>\n            </div>\n          </div>\n        ))}\n        \n        {isProcessing && (\n          <div className=\"flex justify-start\">\n            <div className=\"bg-gray-100 text-gray-900 px-4 py-2 rounded-lg\">\n              <div className=\"flex items-center\">\n                <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-primary-600 mr-2\"></div>\n                Thinking...\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n\n      {/* Input */}\n      <div className=\"border-t border-gray-200 p-4\">\n        <div className=\"flex space-x-2\">\n          <div className=\"flex-1\">\n            <textarea\n              value={inputMessage}\n              onChange={(e) => setInputMessage(e.target.value)}\n              onKeyPress={handleKeyPress}\n              placeholder=\"Ask me about available times... (e.g., 'When are you free this week?', 'I need a meeting next Monday afternoon')\"\n              className=\"w-full border border-gray-300 rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-primary-500 resize-none\"\n              rows={2}\n              disabled={isProcessing}\n            />\n          </div>\n          <button\n            onClick={handleSendMessage}\n            disabled={!inputMessage.trim() || isProcessing}\n            className=\"bg-primary-600 text-white px-4 py-2 rounded-lg hover:bg-primary-700 disabled:opacity-50 disabled:cursor-not-allowed flex items-center\"\n          >\n            <Send className=\"h-4 w-4\" />\n          </button>\n        </div>\n      </div>\n\n      {/* Quick Suggestions */}\n      <div className=\"border-t border-gray-200 p-4\">\n        <h3 className=\"text-sm font-medium text-gray-700 mb-2\">Quick suggestions:</h3>\n        <div className=\"flex flex-wrap gap-2\">\n          {[\n            \"When are you free this week?\",\n            \"I need a meeting next Monday\",\n            \"Any afternoon slots available?\",\n            \"What's your availability next week?\"\n          ].map((suggestion, index) => (\n            <button\n              key={index}\n              onClick={() => setInputMessage(suggestion)}\n              className=\"text-xs bg-gray-100 hover:bg-gray-200 text-gray-700 px-3 py-1 rounded-full transition-colors\"\n            >\n              {suggestion}\n            </button>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AIAssistant; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}