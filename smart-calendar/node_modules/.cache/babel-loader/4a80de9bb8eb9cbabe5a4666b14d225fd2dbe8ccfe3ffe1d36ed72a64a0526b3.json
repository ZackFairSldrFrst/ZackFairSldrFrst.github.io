{"ast":null,"code":"var _jsxFileName = \"/Users/alvinhartono/Documents/GitHub/ZackFairSldrFrst.github.io/smart-calendar/src/components/AIAssistant.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { MessageSquare, Send, Clock, Calendar, Sparkles, Bot } from 'lucide-react';\nimport { format, addDays, startOfWeek, isAfter, isBefore, parseISO } from 'date-fns';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AIAssistant = ({\n  availability,\n  bookings\n}) => {\n  _s();\n  const [messages, setMessages] = useState([{\n    id: 1,\n    type: 'ai',\n    content: \"Hi! I'm your AI assistant. I can help you find the best times for appointments based on your availability. Try asking me something like 'When are you free this week?' or 'I need a meeting next Monday afternoon'.\"\n  }]);\n  const [inputMessage, setInputMessage] = useState('');\n  const [isProcessing, setIsProcessing] = useState(false);\n\n  // AI logic to analyze availability and suggest times\n  const analyzeAvailability = userInput => {\n    const input = userInput.toLowerCase();\n    const suggestions = [];\n\n    // Extract date/time preferences from user input\n    const today = new Date();\n    const nextWeek = addDays(today, 7);\n\n    // Check for specific days mentioned\n    const dayKeywords = {\n      'monday': 1,\n      'mon': 1,\n      'tuesday': 2,\n      'tue': 2,\n      'wednesday': 3,\n      'wed': 3,\n      'thursday': 4,\n      'thu': 4,\n      'friday': 5,\n      'fri': 5,\n      'saturday': 6,\n      'sat': 6,\n      'sunday': 0,\n      'sun': 0\n    };\n\n    // Check for time preferences\n    const timeKeywords = {\n      'morning': {\n        start: '09:00',\n        end: '12:00'\n      },\n      'afternoon': {\n        start: '12:00',\n        end: '17:00'\n      },\n      'evening': {\n        start: '17:00',\n        end: '20:00'\n      },\n      'early': {\n        start: '09:00',\n        end: '11:00'\n      },\n      'late': {\n        start: '16:00',\n        end: '17:00'\n      }\n    };\n\n    // Find available slots for the next 2 weeks\n    for (let i = 0; i < 14; i++) {\n      const checkDate = addDays(today, i);\n      const dayName = format(checkDate, 'EEEE').toLowerCase();\n      const dayAvailability = availability[dayName];\n      if (dayAvailability && dayAvailability.available) {\n        const slots = generateTimeSlotsForDay(checkDate, dayAvailability, bookings);\n        if (slots.length > 0) {\n          // Check if user mentioned specific days\n          let shouldInclude = true;\n          for (const [keyword, dayNum] of Object.entries(dayKeywords)) {\n            if (input.includes(keyword) && checkDate.getDay() !== dayNum) {\n              shouldInclude = false;\n              break;\n            }\n          }\n          if (shouldInclude) {\n            suggestions.push({\n              date: checkDate,\n              dayName: format(checkDate, 'EEEE'),\n              dateFormatted: format(checkDate, 'MMM d'),\n              slots: slots.slice(0, 3) // Limit to 3 suggestions per day\n            });\n          }\n        }\n      }\n    }\n    return suggestions;\n  };\n  const generateTimeSlotsForDay = (date, dayAvailability, existingBookings) => {\n    const slots = [];\n    const startTime = new Date(date);\n    const [startHour, startMinute] = dayAvailability.start.split(':');\n    startTime.setHours(parseInt(startHour), parseInt(startMinute), 0);\n    const endTime = new Date(date);\n    const [endHour, endMinute] = dayAvailability.end.split(':');\n    endTime.setHours(parseInt(endHour), parseInt(endMinute), 0);\n\n    // Generate 30-minute slots\n    const currentTime = new Date(startTime);\n    while (currentTime < endTime) {\n      const timeString = format(currentTime, 'HH:mm');\n      const isBooked = existingBookings.some(booking => format(new Date(booking.date), 'yyyy-MM-dd') === format(date, 'yyyy-MM-dd') && booking.time === timeString);\n      if (!isBooked) {\n        slots.push(timeString);\n      }\n      currentTime.setMinutes(currentTime.getMinutes() + 30);\n    }\n    return slots;\n  };\n  const handleSendMessage = async () => {\n    if (!inputMessage.trim() || isProcessing) return;\n    const userMessage = {\n      id: messages.length + 1,\n      type: 'user',\n      content: inputMessage\n    };\n    setMessages(prev => [...prev, userMessage]);\n    setInputMessage('');\n    setIsProcessing(true);\n\n    // Simulate AI processing delay\n    setTimeout(() => {\n      const suggestions = analyzeAvailability(inputMessage);\n      let aiResponse = '';\n      if (suggestions.length > 0) {\n        aiResponse = \"Based on your availability, here are some great times for your appointment:\\n\\n\";\n        suggestions.forEach(suggestion => {\n          aiResponse += `📅 **${suggestion.dayName}, ${suggestion.dateFormatted}**\\n`;\n          suggestion.slots.forEach(slot => {\n            aiResponse += `   ⏰ ${slot}\\n`;\n          });\n          aiResponse += '\\n';\n        });\n        aiResponse += \"You can click on any of these times in the booking interface to schedule your appointment!\";\n      } else {\n        aiResponse = \"I couldn't find any available times that match your request. Try asking for a different time period or check the availability settings.\";\n      }\n      const aiMessage = {\n        id: messages.length + 2,\n        type: 'ai',\n        content: aiResponse\n      };\n      setMessages(prev => [...prev, aiMessage]);\n      setIsProcessing(false);\n    }, 1500);\n  };\n  const handleKeyPress = e => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSendMessage();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-white rounded-lg shadow\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"border-b border-gray-200 p-4\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center justify-center w-10 h-10 bg-primary-100 rounded-full mr-3\",\n          children: /*#__PURE__*/_jsxDEV(Bot, {\n            className: \"h-5 w-5 text-primary-600\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-lg font-semibold text-gray-900\",\n            children: \"AI Assistant\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-sm text-gray-500\",\n            children: \"Ask me about available times\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"h-96 overflow-y-auto p-4 space-y-4\",\n      children: [messages.map(message => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `flex ${message.type === 'user' ? 'justify-end' : 'justify-start'}`,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `max-w-xs lg:max-w-md px-4 py-2 rounded-lg ${message.type === 'user' ? 'bg-primary-600 text-white' : 'bg-gray-100 text-gray-900'}`,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"whitespace-pre-line\",\n            children: message.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 13\n        }, this)\n      }, message.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 11\n      }, this)), isProcessing && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-start\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-gray-100 text-gray-900 px-4 py-2 rounded-lg\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"animate-spin rounded-full h-4 w-4 border-b-2 border-primary-600 mr-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 17\n            }, this), \"Thinking...\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"border-t border-gray-200 p-4\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex space-x-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-1\",\n          children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: inputMessage,\n            onChange: e => setInputMessage(e.target.value),\n            onKeyPress: handleKeyPress,\n            placeholder: \"Ask me about available times... (e.g., 'When are you free this week?', 'I need a meeting next Monday afternoon')\",\n            className: \"w-full border border-gray-300 rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-primary-500 resize-none\",\n            rows: 2,\n            disabled: isProcessing\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSendMessage,\n          disabled: !inputMessage.trim() || isProcessing,\n          className: \"bg-primary-600 text-white px-4 py-2 rounded-lg hover:bg-primary-700 disabled:opacity-50 disabled:cursor-not-allowed flex items-center\",\n          children: /*#__PURE__*/_jsxDEV(Send, {\n            className: \"h-4 w-4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"border-t border-gray-200 p-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-sm font-medium text-gray-700 mb-2\",\n        children: \"Quick suggestions:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-wrap gap-2\",\n        children: [\"When are you free this week?\", \"I need a meeting next Monday\", \"Any afternoon slots available?\", \"What's your availability next week?\"].map((suggestion, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setInputMessage(suggestion),\n          className: \"text-xs bg-gray-100 hover:bg-gray-200 text-gray-700 px-3 py-1 rounded-full transition-colors\",\n          children: suggestion\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 159,\n    columnNumber: 5\n  }, this);\n};\n_s(AIAssistant, \"yhjXZsrymCLT/hcwNkPugtdGCoo=\");\n_c = AIAssistant;\nexport default AIAssistant;\nvar _c;\n$RefreshReg$(_c, \"AIAssistant\");","map":{"version":3,"names":["React","useState","MessageSquare","Send","Clock","Calendar","Sparkles","Bot","format","addDays","startOfWeek","isAfter","isBefore","parseISO","jsxDEV","_jsxDEV","AIAssistant","availability","bookings","_s","messages","setMessages","id","type","content","inputMessage","setInputMessage","isProcessing","setIsProcessing","analyzeAvailability","userInput","input","toLowerCase","suggestions","today","Date","nextWeek","dayKeywords","timeKeywords","start","end","i","checkDate","dayName","dayAvailability","available","slots","generateTimeSlotsForDay","length","shouldInclude","keyword","dayNum","Object","entries","includes","getDay","push","date","dateFormatted","slice","existingBookings","startTime","startHour","startMinute","split","setHours","parseInt","endTime","endHour","endMinute","currentTime","timeString","isBooked","some","booking","time","setMinutes","getMinutes","handleSendMessage","trim","userMessage","prev","setTimeout","aiResponse","forEach","suggestion","slot","aiMessage","handleKeyPress","e","key","shiftKey","preventDefault","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","message","value","onChange","target","onKeyPress","placeholder","rows","disabled","onClick","index","_c","$RefreshReg$"],"sources":["/Users/alvinhartono/Documents/GitHub/ZackFairSldrFrst.github.io/smart-calendar/src/components/AIAssistant.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { MessageSquare, Send, Clock, Calendar, Sparkles, Bot } from 'lucide-react';\nimport { format, addDays, startOfWeek, isAfter, isBefore, parseISO } from 'date-fns';\n\nconst AIAssistant = ({ availability, bookings }) => {\n  const [messages, setMessages] = useState([\n    {\n      id: 1,\n      type: 'ai',\n      content: \"Hi! I'm your AI assistant. I can help you find the best times for appointments based on your availability. Try asking me something like 'When are you free this week?' or 'I need a meeting next Monday afternoon'.\"\n    }\n  ]);\n  const [inputMessage, setInputMessage] = useState('');\n  const [isProcessing, setIsProcessing] = useState(false);\n\n  // AI logic to analyze availability and suggest times\n  const analyzeAvailability = (userInput) => {\n    const input = userInput.toLowerCase();\n    const suggestions = [];\n    \n    // Extract date/time preferences from user input\n    const today = new Date();\n    const nextWeek = addDays(today, 7);\n    \n    // Check for specific days mentioned\n    const dayKeywords = {\n      'monday': 1, 'mon': 1,\n      'tuesday': 2, 'tue': 2,\n      'wednesday': 3, 'wed': 3,\n      'thursday': 4, 'thu': 4,\n      'friday': 5, 'fri': 5,\n      'saturday': 6, 'sat': 6,\n      'sunday': 0, 'sun': 0\n    };\n\n    // Check for time preferences\n    const timeKeywords = {\n      'morning': { start: '09:00', end: '12:00' },\n      'afternoon': { start: '12:00', end: '17:00' },\n      'evening': { start: '17:00', end: '20:00' },\n      'early': { start: '09:00', end: '11:00' },\n      'late': { start: '16:00', end: '17:00' }\n    };\n\n    // Find available slots for the next 2 weeks\n    for (let i = 0; i < 14; i++) {\n      const checkDate = addDays(today, i);\n      const dayName = format(checkDate, 'EEEE').toLowerCase();\n      const dayAvailability = availability[dayName];\n      \n      if (dayAvailability && dayAvailability.available) {\n        const slots = generateTimeSlotsForDay(checkDate, dayAvailability, bookings);\n        \n        if (slots.length > 0) {\n          // Check if user mentioned specific days\n          let shouldInclude = true;\n          for (const [keyword, dayNum] of Object.entries(dayKeywords)) {\n            if (input.includes(keyword) && checkDate.getDay() !== dayNum) {\n              shouldInclude = false;\n              break;\n            }\n          }\n          \n          if (shouldInclude) {\n            suggestions.push({\n              date: checkDate,\n              dayName: format(checkDate, 'EEEE'),\n              dateFormatted: format(checkDate, 'MMM d'),\n              slots: slots.slice(0, 3) // Limit to 3 suggestions per day\n            });\n          }\n        }\n      }\n    }\n\n    return suggestions;\n  };\n\n  const generateTimeSlotsForDay = (date, dayAvailability, existingBookings) => {\n    const slots = [];\n    const startTime = new Date(date);\n    const [startHour, startMinute] = dayAvailability.start.split(':');\n    startTime.setHours(parseInt(startHour), parseInt(startMinute), 0);\n\n    const endTime = new Date(date);\n    const [endHour, endMinute] = dayAvailability.end.split(':');\n    endTime.setHours(parseInt(endHour), parseInt(endMinute), 0);\n\n    // Generate 30-minute slots\n    const currentTime = new Date(startTime);\n    while (currentTime < endTime) {\n      const timeString = format(currentTime, 'HH:mm');\n      const isBooked = existingBookings.some(booking => \n        format(new Date(booking.date), 'yyyy-MM-dd') === format(date, 'yyyy-MM-dd') &&\n        booking.time === timeString\n      );\n      \n      if (!isBooked) {\n        slots.push(timeString);\n      }\n      \n      currentTime.setMinutes(currentTime.getMinutes() + 30);\n    }\n\n    return slots;\n  };\n\n  const handleSendMessage = async () => {\n    if (!inputMessage.trim() || isProcessing) return;\n\n    const userMessage = {\n      id: messages.length + 1,\n      type: 'user',\n      content: inputMessage\n    };\n\n    setMessages(prev => [...prev, userMessage]);\n    setInputMessage('');\n    setIsProcessing(true);\n\n    // Simulate AI processing delay\n    setTimeout(() => {\n      const suggestions = analyzeAvailability(inputMessage);\n      \n      let aiResponse = '';\n      if (suggestions.length > 0) {\n        aiResponse = \"Based on your availability, here are some great times for your appointment:\\n\\n\";\n        suggestions.forEach(suggestion => {\n          aiResponse += `📅 **${suggestion.dayName}, ${suggestion.dateFormatted}**\\n`;\n          suggestion.slots.forEach(slot => {\n            aiResponse += `   ⏰ ${slot}\\n`;\n          });\n          aiResponse += '\\n';\n        });\n        aiResponse += \"You can click on any of these times in the booking interface to schedule your appointment!\";\n      } else {\n        aiResponse = \"I couldn't find any available times that match your request. Try asking for a different time period or check the availability settings.\";\n      }\n\n      const aiMessage = {\n        id: messages.length + 2,\n        type: 'ai',\n        content: aiResponse\n      };\n\n      setMessages(prev => [...prev, aiMessage]);\n      setIsProcessing(false);\n    }, 1500);\n  };\n\n  const handleKeyPress = (e) => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSendMessage();\n    }\n  };\n\n  return (\n    <div className=\"bg-white rounded-lg shadow\">\n      {/* Header */}\n      <div className=\"border-b border-gray-200 p-4\">\n        <div className=\"flex items-center\">\n          <div className=\"flex items-center justify-center w-10 h-10 bg-primary-100 rounded-full mr-3\">\n            <Bot className=\"h-5 w-5 text-primary-600\" />\n          </div>\n          <div>\n            <h2 className=\"text-lg font-semibold text-gray-900\">AI Assistant</h2>\n            <p className=\"text-sm text-gray-500\">Ask me about available times</p>\n          </div>\n        </div>\n      </div>\n\n      {/* Messages */}\n      <div className=\"h-96 overflow-y-auto p-4 space-y-4\">\n        {messages.map((message) => (\n          <div\n            key={message.id}\n            className={`flex ${message.type === 'user' ? 'justify-end' : 'justify-start'}`}\n          >\n            <div\n              className={`max-w-xs lg:max-w-md px-4 py-2 rounded-lg ${\n                message.type === 'user'\n                  ? 'bg-primary-600 text-white'\n                  : 'bg-gray-100 text-gray-900'\n              }`}\n            >\n              <div className=\"whitespace-pre-line\">{message.content}</div>\n            </div>\n          </div>\n        ))}\n        \n        {isProcessing && (\n          <div className=\"flex justify-start\">\n            <div className=\"bg-gray-100 text-gray-900 px-4 py-2 rounded-lg\">\n              <div className=\"flex items-center\">\n                <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-primary-600 mr-2\"></div>\n                Thinking...\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n\n      {/* Input */}\n      <div className=\"border-t border-gray-200 p-4\">\n        <div className=\"flex space-x-2\">\n          <div className=\"flex-1\">\n            <textarea\n              value={inputMessage}\n              onChange={(e) => setInputMessage(e.target.value)}\n              onKeyPress={handleKeyPress}\n              placeholder=\"Ask me about available times... (e.g., 'When are you free this week?', 'I need a meeting next Monday afternoon')\"\n              className=\"w-full border border-gray-300 rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-primary-500 resize-none\"\n              rows={2}\n              disabled={isProcessing}\n            />\n          </div>\n          <button\n            onClick={handleSendMessage}\n            disabled={!inputMessage.trim() || isProcessing}\n            className=\"bg-primary-600 text-white px-4 py-2 rounded-lg hover:bg-primary-700 disabled:opacity-50 disabled:cursor-not-allowed flex items-center\"\n          >\n            <Send className=\"h-4 w-4\" />\n          </button>\n        </div>\n      </div>\n\n      {/* Quick Suggestions */}\n      <div className=\"border-t border-gray-200 p-4\">\n        <h3 className=\"text-sm font-medium text-gray-700 mb-2\">Quick suggestions:</h3>\n        <div className=\"flex flex-wrap gap-2\">\n          {[\n            \"When are you free this week?\",\n            \"I need a meeting next Monday\",\n            \"Any afternoon slots available?\",\n            \"What's your availability next week?\"\n          ].map((suggestion, index) => (\n            <button\n              key={index}\n              onClick={() => setInputMessage(suggestion)}\n              className=\"text-xs bg-gray-100 hover:bg-gray-200 text-gray-700 px-3 py-1 rounded-full transition-colors\"\n            >\n              {suggestion}\n            </button>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AIAssistant; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}